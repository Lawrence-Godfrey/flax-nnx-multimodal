[build-system]
requires = ["uv_build>=0.8.19,<0.9.0"]
build-backend = "uv_build"

[project]
name = "bge-visualized-jax"
version = "0.1.0"
description = "JAX/Flax NNX implementation of BGE Visualized multimodal embedding model"
readme = "README.md"
license = "MIT"
requires-python = ">=3.9"
authors = [
    { name = "BGE Visualized JAX Team" },
]
keywords = [
    "jax",
    "flax",
    "multimodal",
    "embeddings",
    "vision-language",
    "bge",
    "clip",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    # Core JAX and Flax dependencies
    "jax",
    "flax",
    "jaxlib",
    
    # Transformers for tokenizer compatibility
    "transformers",
    
    # PyTorch for weight conversion (CPU only)
    "torch",
    "torchvision",
    
    "pillow",
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-benchmark",
    "pytest-cov",
    "ruff",
    "typos",
]

[project.urls]
Homepage = "https://github.com/bge-visualized-jax/bge-visualized-jax"
Repository = "https://github.com/bge-visualized-jax/bge-visualized-jax"
Issues = "https://github.com/bge-visualized-jax/bge-visualized-jax/issues"

# No hatch configuration needed for uv build

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.ruff]
line-length = 100
target-version = "py39"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "PTH", # flake8-use-pathlib
    "ERA", # eradicate
    "PL",  # pylint
    "RUF", # ruff-specific rules
]
ignore = [
    "E501",   # line too long, handled by formatter
    "B008",   # do not perform function calls in argument defaults
    "PLR0913", # too many arguments to function call
    "PLR0912", # too many branches
    "PLR0915", # too many statements
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["PLR2004", "S101", "ARG"]
"__init__.py" = ["F401"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.typos.default]
extend-ignore-identifiers-re = [
    # JAX/Flax specific terms
    "nnx",
    "jaxlib",
    "pytree",
    # Model specific terms  
    "bge",
    "eva",
    "multimodal",
]

[tool.typos.files]
extend-exclude = [
    "visual_bge/",
    "*.pth",
]